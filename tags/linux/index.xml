<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on Knowledge x Base</title>
    <link>https://hhn-pham.github.io/tags/linux/</link>
    <description>Recent content in linux on Knowledge x Base</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>Â© me</copyright>
    <lastBuildDate>Sat, 04 Sep 2021 21:14:44 +0100</lastBuildDate><atom:link href="https://hhn-pham.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Sxhkd</title>
      <link>https://hhn-pham.github.io/cheats/sxhkd/</link>
      <pubDate>Sat, 04 Sep 2021 21:14:44 +0100</pubDate>
      
      <guid>https://hhn-pham.github.io/cheats/sxhkd/</guid>
      <description>Launch    Command Mapping     Browser Super + b   Calculator Super + q   Colorpicker Super + c   Emoji picker Super + period   App launcher Super + space   Scratchpad Super + g   Terminal Super + Return   Floating terminal Super + Shift + Return   Sink picker Hyper + v   Powermenu Hyper + p   List of open windows Alt + Tab    Toggle    Command Mapping     Dunst Super + t + d   Picom Super + t + p   Keymap Alt + Space    Screenshot    Command Mapping     Screenshot region Super + p + r   Screenshot fullscreen Super + p + f    Music    Command Mapping     Launch player Super + s + p   Play-pause Super + s + slash   Next song Super + s + comma   Previous song Super + s + period   Album cover Super + s + c   Visualisation Super + s + v   Lyrics Super + s + l    Audio    Command Mapping     Increase volume Hyper + period   Decrease volume Hyper + comma   Mute output Hyper + m   Mute input Hyper + n    Notifications    Command Mapping     History Control + Escape   Close Control + Space   Close all Control + Shift + Space    i3wm    Command Mapping     Split vertical Super + v   Split horizontal Super + x   Fullscreen Super + f   Sticky Super + o   Focus floating Super + z   Focus l/d/u/r Super + h/j/k/l   Move l/d/u/r Super + Shift + h/j/k/l   Go to workspace n Super + n   Move to workspace n Super + Shift + n   Move to scratchpad Super + minus   Cycle through scratchpad Super + equal   Back and forth Super + backslash   Floating Super + Shift + Space   Move to next/prev workspace Super + Shift + Left/Right   Go to next/prev workspace Super + Left/Right    Reload    Command Mapping     sxhkd Super + r + s   Polybar Super + r + p   i3wm Super + r + w   wpgtk Super + r + c    </description>
    </item>
    
    <item>
      <title>Startup time</title>
      <link>https://hhn-pham.github.io/posts/startup-time/</link>
      <pubDate>Wed, 25 Aug 2021 17:26:05 +0100</pubDate>
      
      <guid>https://hhn-pham.github.io/posts/startup-time/</guid>
      <description>Neovim I tried to configure Neovim&amp;rsquo;s plugins using Packer as opposed to using Vim-plug. I found out that it is easier to lazy-load plugins, so I tried to lazy-load as many as I can. I currently have 38 41 plugins, and so far only two of them are not lazy-loaded, as doing so messed things up no matter what I tried. By doing #!bash nvim --startuptime /path/to/file, it is reported that my Neovim takes 71 64 ms to load the screen, pretty good considering I have a lot of plugins.</description>
    </item>
    
    <item>
      <title>Dotfiles</title>
      <link>https://hhn-pham.github.io/posts/dotfiles/</link>
      <pubDate>Sat, 21 Aug 2021 19:01:00 +0000</pubDate>
      
      <guid>https://hhn-pham.github.io/posts/dotfiles/</guid>
      <description>Dotfiles This a write-up for the README.md file for my dotfiles repository so the links will not work.
Programs and tools    Program Name     Shell ZSH   Editor Neovim   Window manager i3-gaps   Compositor Picom   Bar Polybar   Launcher rofi   Browser Brave   Audio Pipewire   Spotify ncspot   PDF viewer Zathura   Media player MPV   GTK &amp;amp; colors wpgtk   Colorscheme Custom   Fetch neofetch   Prompt Spaceship   Terminal Kitty   Icons Fluent dark   Cursor Bibata   Lock i3-lock   Display manager LightDM   LightDM theme Aether   Notifications i3-notifier   Downloads Aria2   Image viewer feh    </description>
    </item>
    
    <item>
      <title>Moving from yay to paru</title>
      <link>https://hhn-pham.github.io/posts/paru/</link>
      <pubDate>Sun, 01 Aug 2021 21:46:00 +0000</pubDate>
      
      <guid>https://hhn-pham.github.io/posts/paru/</guid>
      <description>Migration Moving from yay to paru, I discovered a few useful commands that existed in yay that I never bothered checking out.
Cheatsheet Below is a snippet from my zshrc showing my paru aliases and their tldr:
alias u=&amp;#39;paru -Syu&amp;#39; #sync &amp;amp; upgrade alias usu=&amp;#39;paru -Syu --noconfirm&amp;#39; #sync &amp;amp; upgrade w/o confirmation alias pstats=&amp;#39;paru -Ps&amp;#39; #display stats alias pcmt=&amp;#39;paru -Gc&amp;#39; #display comments alias pnews=&amp;#39;paru -Pw&amp;#39; #display news alias pid=&amp;#39;paru -U&amp;#39; #install from local file(s) alias pir=&amp;#39;paru -S&amp;#39; #install from repositories alias pnd=&amp;#39;paru -Qi&amp;#39; #display info from database alias pnr=&amp;#39;paru -Si&amp;#39; #display info from repositories alias pfd=&amp;#39;paru -Qs&amp;#39; #search in database alias pfr=&amp;#39;paru -Ss&amp;#39; #search in repositories alias pls=&amp;#39;paru -Q&amp;#39; #list packages installed alias pls=&amp;#39;paru -Qea&amp;#39; #list packages explicitly installed alias orf=&amp;#39;paru -Qdt&amp;#39; #list orphaned packages alias pcc=&amp;#39;paru -Scd&amp;#39; #interactive cache removal FZF integration I also found that defining an installing and removing function which uses FZF to crawl through the local database is great.</description>
    </item>
    
    <item>
      <title>Cleaning $HOME</title>
      <link>https://hhn-pham.github.io/posts/cleaning-home/</link>
      <pubDate>Sat, 31 Jul 2021 20:33:00 +0000</pubDate>
      
      <guid>https://hhn-pham.github.io/posts/cleaning-home/</guid>
      <description>XDG_Base_Directory crisis I ls -a my home directory one morning and found that it is littered with .dir and .file from compilers and packages that do not comply with the XDG standards. I did realise that I did not export the variables in my zshrc, so I did that and emptied my home directory pretty well. However, there are quite a few that needed their separate variable, like PACKAGE_XYZ_CONFIG_DIR=$HOME/.config/xyz/, some even needed alias that points the config directory to the right place.</description>
    </item>
    
    <item>
      <title>Bash scripting</title>
      <link>https://hhn-pham.github.io/posts/bash-scripting/</link>
      <pubDate>Fri, 30 Jul 2021 00:53:00 +0000</pubDate>
      
      <guid>https://hhn-pham.github.io/posts/bash-scripting/</guid>
      <description>Motivation I wanted a simple and creative way to manage my dotfiles, one which would allow more automation than my previous method. I stumbled upon many existing tools that can be utilised to manage dotfiles, such as GNU Stow and chezmoi. But they all seem to be too overkill for me, and their management method do not float my boat quite that well. Here&amp;rsquo;s what these tools might envision a ~/dotfiles or ~/.</description>
    </item>
    
    <item>
      <title>/etc/hosts</title>
      <link>https://hhn-pham.github.io/posts/hostfile/</link>
      <pubDate>Fri, 30 Jul 2021 00:32:00 +0000</pubDate>
      
      <guid>https://hhn-pham.github.io/posts/hostfile/</guid>
      <description>Utility I am now using hblock and it seems to be really great at managing /etc/hosts. To put simply, I have a template with my hostname and localhost, and then a sources.list file with StevenBlack master hostfile. Hblock essentially appends the StevenBlack&amp;rsquo;s hostfile to the template and then move it to /etc/hosts.</description>
    </item>
    
    <item>
      <title>Luks on LVM</title>
      <link>https://hhn-pham.github.io/posts/luksonlvm/</link>
      <pubDate>Sat, 03 Jul 2021 01:26:00 +0000</pubDate>
      
      <guid>https://hhn-pham.github.io/posts/luksonlvm/</guid>
      <description>LUKS setup I wanted to protect my desktop PC with LUKS2, I decided to use LVM after reading not so good things about BTRFS. I settled on LUKS on LVM instead of LVM on LUKS because I wanted to have partition separation for easier control if I do end up with a corrupted root partition. While chain unlocking is not as secure as entering two passwords to decrypt two partitions, the guide I used worked and it is a very good guide which explains everything.</description>
    </item>
    
  </channel>
</rss>
